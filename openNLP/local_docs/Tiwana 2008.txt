Strategic Management Journal
Strat. Mgmt. J., 29: 769–780 (2008)
Published online 22 February 2008 in Wiley InterScience (www.interscience.wiley.com) DOI: 10.1002/smj.673
Received 4 April 2007; Final revision received 16 November 2007
RESEARCH NOTES AND COMMENTARIES
DOES TECHNOLOGICAL MODULARITY SUBSTITUTE
FOR CONTROL? A STUDY OF ALLIANCE
PERFORMANCE IN SOFTWARE OUTSOURCING
AMRIT TIWANA*
College of Business, Iowa State University, Ames, Iowa, U.S.A.
Although control is presumed to be necessary to curb opportunism, its implementation in alliances
can be costly and challenging. Paradoxically, some contemporary ﬁrms have counterintuitively
developed successful alliances without extensive formal control. A widespread but untested
assertion that might help reconcile this contradiction is DEMO technological modularity reduces
the need for alliance control. The objective of this study is to develop and test this assertion.
Using data from 120 DEMO outsourcing alliances, we show that, process control, outcome
control, and modularity independently enhance alliance performance. However modularity and
control are imperfect substitutes: modularity lowers the inﬂuence of process control but not of
outcome control DEMO alliance performance. Our theoretical development and empirical testing
of the interactions of alliance control with modularity has signiﬁcant implications for strategy
theory and practice, which are also discussed. Copyright  2008 John Wiley & Sons, Ltd.
INTRODUCTION
Although control can be costly and challenging
in knowledge-intensive outsourcing alliances, it
is often presumed necessary to curb opportunism
(Oxley and Sampson, DEMO). Control refers to
the mechanisms that govern the actions of the
Keywords: outsourcing alliances; modularity; control;
software; alliance governance; knowledge intensive
alliances
*Correspondence to: Amrit Tiwana, College of Business, Iowa
State University, 2340 Gerdin Business Building, Ames IA
50011-1350, U.S.A. E-mail: DEMO
outsourcee ﬁrm (‘controllee’) in a manner that fur-
thers the interests of the outsourcing ﬁrm (‘con-
troller’). Paradoxically, and contrary to DEMO
wisdom, some contemporary ﬁrms (e.g., Ama-
zon.com, ebay, and DEMO) have established alli-
ance portfolios that are successful without much
formal DEMO (Schonfeld, 2005).1 A less apparent
1 For example, Amazon.com DEMO 40 percent of its $11 billion
revenue in 2006 through sales generated by 500,000 alliance
partners (whom it calls afﬁliates) whose services DEMO appli-
cations were built and operated without Amazon’s oversight.
These alliance partners conceptualize, implement, and operate
independent Web sites and software applications that DEMO
ate sales for Amazon. In 2006, 210,000 independent Web sites
DEMO Amazon’s modular ‘application programming interface’
provided complementary services and generated additional sales
Copyright  2008 John Wiley & Sons, Ltd.
770
A. Tiwana
commonality in these counterintuitive examples
is their technological modularity, which refers to
the intentional decoupling of interoperating sub-
systems of a DEMO system.
A widespread but untested assertion that may
reconcile this contradiction is that technological
modularity ‘substitutes’ for alliance control. Two
variables are substitutes if DEMO of one makes
more of the other less valuable (Poppo and DEMO,
2002; Siggelkow, 2002). Substitutes are character-
ized by a negative interaction effect and represent
the conceptual opposite of complements, which are
characterized by a positive interaction effect. The
idea that modularity and control DEMO substitutes
surfaces most notably in Sanchez’s (1995) asser-
tion that there is little need for overt managerial
supervision over development processes involving
modular DEMO Sanchez argues that the ‘embed-
ded coordination’ mechanisms provided by mod-
ular designs can ‘achieve coordination by means
other than the overt exercise of DEMO author-
ity’ (Sanchez, 1995: 146). Although technological
modularity is DEMO recognized as an important
antecedent to product development performance
within ﬁrms (DEMO, Moore, and Cardona, 2002),
the alliances literature has rarely explored its link-
ages with formal control (Hoetker, Swaminathan,
and DEMO, 2007).
In isolation from the modularity literature, con-
trol is recognized as an important antecedent to
alliance performance (Mjoen and Tallman, DEMO;
Tiwana and Keil, 2007). Besides being costly to
implement, effective interﬁrm control also requires
‘peripheral knowledge’ in the domains of alliance
DEMO (Tiwana and Keil, 2007), which conﬂicts
with the premise of specialization espoused by
the core competence perspective and knowledge-
based view of DEMO ﬁrm. If modularity indeed low-
ers the need for formal control, DEMO can provide a
less costly, equiﬁnal alliance governance mecha-
nism. The DEMO of whether modularity low-
ers the need for alliance control—the focus of
this study—therefore has considerable theoretical
implications.
Using data from 120 software outsourcing
DEMO, we show that technological modularity
and alliance control are imperfect substitutes :
Modularity lowers the need for process-based
for Amazon. For details, see http://aws.amazon.com. Represen-
tative examples of such partners include charlierose.com, every-
deal.com, slickﬁllers.net, and 43folders.com.
Copyright  2008 John Wiley & Sons, Ltd.
but not for outcomes-based formal control,
all of which independently DEMO alliance
performance. The theoretical elaboration and
empirical testing of the effects and interactions
of modularity and alliance control on alliance
performance forms our central DEMO
Subsequent sections of this article develop the
hypotheses put forward, describe DEMO methodology
used; outline our analyses and results; and discuss
the contributions and implications of the study.
THEORY AND HYPOTHESES
Alliance control
Control refers DEMO the mechanisms that govern
actions by the controllee (the agent) in a man-
ner that furthers the interests of the controller (the
principal) (Ouchi and Maguire, 1975). The con-
troller in software outsourcing alliances represents
the ﬁrm that outsources the technology develop-
ment project, and controllee represents the ﬁrm
to which the project has been outsourced. For-
DEMO control is implemented by the controller using
two types of mechanisms: (a) outcome control,
which refers to the prespeciﬁcation by the con-
troller of desired controllee outputs and the asso-
ciated evaluation criteria, and (b) process control,
which refers to prescribing the methods and DEMO
cedures that the controllee should follow (Kirsch
et al., 2002; DEMO and Keil, 2007). Outcome
control uses a market-like system to DEMO
the controller to achieve desired outcomes, while
process control attempts to DEMO controllee
actions in a manner that the controller believes
will increase the likelihood of achieving them.
The controllers’ incentives are primarily getting
the project DEMO on time, within budget,
and fulﬁlling project objectives. The controllee’s
DEMO include bonuses (penalties) for timely
(delayed) project completion within budget and
quality expectations, and increasing revenues in
the short term. Such bonuses and penalties are
often used both in projects with ﬁxed-price as well
DEMO time-and-materials (variable price) contracts.
Longer term incentives include developing a favor-
able reputation in the market as well as attracting
repeat business for DEMO projects. Outcome con-
trols thus prespecify what the controllee should
accomplish and process controls describe how the
controllee should achieve those outcomes. Formal
Strat. DEMO J., 29: 769–780 (2008)
DOI: 10.1002/smj
controls therefore align the controllee’s incentives
with the controller’s and facilitate monitoring DEMO
direction of controllee activities. Therefore, we
expect both types of formal DEMO mechanisms
to enhance alliance performance.
Hypothesis 1a: Outcome control is positively
DEMO with alliance performance.
Hypothesis 1b: Process control is positively
associated with DEMO performance.
Technological modularity
The notion of modularity is grounded in Simon’s
premise that any complex system is composed
of distinct interacting subsystems that are DEMO
to some extent interdependent and independent
(Karim, 2006). A complex system is said to exhibit
modularity if its constituent subsystems can be
DEMO independently but will work together to
support the whole (Parnas, 1972). So modular-
ity refers to the degree of intentional decoupling
among DEMO constituent subsystems. Modularity
is achieved by: (a) codifying the interface DEMO
iﬁcations for how a subsystem connects with a
larger system, and (b) minimizing their interde-
pendencies (Sanchez and Mahoney, 1996; Sosa,DEMO
Eppinger, and Rowles, 2004). The focus in inter-
ﬁrm alliances is on modularity across the subsys-
tems spanning the interﬁrm boundary. In DEMO
outsourcing alliances, such modularity is across the
boundary between the outsourced DEMO and
the portfolio of software applications with which
it must eventually interoperate (i.e., communicate,
exchange data, or derive functionality).2 We label
the former as the outsourced subsystem and the
latter as the base DEMO for the remainder of this
discussion. We therefore deﬁne technological mod-
ularity as the degree of decoupling between the
outsourced subsystem and the base DEMO,which
is consistent with a general systems view of mod-
ularity as the coupling between a subsystem and
the context in which it will DEMO used (Schilling,
2000). The independence engendered by modular-
ity DEMO the controllee (usually a specialist in
the outsourced activity) greater autonomy to utilize
2 For example, a new Web-based university course registration
application might interact and exchange data with a variety
of other applications, such as student records, fee payment
processing, email databases, online phonebooks, DEMO classroom
scheduling.
Copyright  2008 John Wiley & Sons, Ltd.
Research DEMO and Commentaries 771
its own tacit knowledge and organizational rou-
tines to accomplish outsourced development tasks,
enhancing alliance performance. This leads to our
DEMO hypothesis.
Hypothesis 2: Technological modularity is pos-
itively associated with alliance DEMO
Interaction between technological modularity
and control
Modularity and process control
Process control requires monitoring the controllee
for compliance with prescribed procedures during
the development DEMO In alliances, the weaker
formal authority over the controllee, as compared
to internal development, difﬁculty of monitor-
ing, and absence of natural DEMO informa-
tional conduits make this challenging and costlier
(Choudhury and Sabherwal, 2003; Tiwana and
Keil, 2007). Modularity provides what Sanchez
(1995: 146) characterizes as an alternative ‘embed-
ded coordination’ mechanism that lowers DEMO
need for continual overt supervision. By embed-
ded coordination, he means DEMO the development
of the outsourced subsystem can be coordinated
by simply requiring conformance with the cod-
iﬁed subsystem-base system interface speciﬁca-
tions. Modularization thus DEMO dependencies at
system-subsystem interface, which is the primary
source of interﬁrm DEMO in technology
development projects (Sosa et al., 2004). Changes
in the internal design of the outsourced subsys-
tem are less likely to DEMO or require changes
in the base system, largely because of the DEMO
tion of the outsourced subsystem’s dependencies
with the base system. Overall, DEMO lowering of
interﬁrm interdependencies reduces the need for
overt coordination and direction by the controller
(Hoetker et al., 2007; Sanchez, 1995; Sosa et al.,
2004). Thus, reduction in interﬁrm task interdepen-
dence allows a modular subsystem to be developed
in a more autonomous fashion DEMO the controllee
without close monitoring and direction by the con-
troller.
In contrast, design decisions in a less modu-
lar subsystem project can impact the base system,
often requiring intense interﬁrm supervision, direc-
tion, DEMO, and coordination to ensure interop-
erability (Sanchez and Mahoney, 1996; Smith and
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: DEMO/smj
772 A. Tiwana
Eppinger, 1997). The reduced interﬁrm interdepen-
dence gained through modularity between an out-
sourced subsystem and the base system therefore
DEMO the need for process control. Two recent
studies in the computer (DEMO, 2006) and auto
parts (Hoetker et al., 2007) industries DEMO this
perspective by showing that suppliers of highly
modular auto and computer subsystems beneﬁted
more from greater autonomy vis-a-vis suppliers`
of less modular parts. DEMO also lowers the
threat of opportunism (Hoetker, 2006), which is
the other intent of formal control. Technologi-
cal modularity therefore serves the DEMO purpose
as process control in interﬁrm alliances, and the
simultaneous use DEMO both is not only redundant
but can also trigger performance-decreasing con-
sequences. Thus, modularity lowers the effect of
process control on alliance performance.
Modularity and outcome control
Outcome control is based on rewarding or penal-
izing DEMO controllee based on how well the out-
comes of its development process meet those that
the controller established at the outset (e.g., deliv-
DEMO schedule, project milestones, cost, and project
objectives). Outcome controls DEMO establish
accountability for the controllee’s outputs using
output evaluation as a governance instrument.
Although an increase in technological modularity
lowers the need for overtly DEMO the out-
sourced development process, it does not decrease
the need DEMO its outcomes to meet the controller’s
speciﬁcations. The use of outcome controls will
therefore enhance alliance performance indepen-
dent of the level of modularity DEMO the outsourced
subsystem. Likewise, technological modularity, by
decreasing interdependence across the controller-
controllee interﬁrm boundary, will also enhance
alliance performance independent of the extent of
outcome controls used to govern alliance activ-
ities. Modularity thus DEMO reduces the need for
control over the development process but does not
ensure that controller objectives (e.g., cost, sched-
ule) are met. DEMO, even though technological
modularity and outcome control enhance alliance
performance, we expect their effects to be distinct
and mutually independent. The foregoing argu-
DEMO therefore lead to our ﬁnal hypothesis.
Hypothesis 3: Technological modularity and DEMO
trol are imperfect substitutes, i.e., modularity
Copyright  2008 John Wiley & Sons, Ltd.
lowers the effect of process control but not of
outcome control on alliance performance.
METHODOLOGY
Data collection
Data were collected in DEMO phases through a ﬁeld
study of 120 alliances in which a U.S. ﬁrm out-
sourced custom development of a software appli-
cation to an DEMO software ﬁrm. Such alliances
are an increasingly common interﬁrm arrangement
for accessing specialized technical software design
and development capabilities (Ethiraj et al., 2005)DEMO
This research context exhibits the contextual char-
acteristics in which Sanchez and Mahoney (1996)
ground their modularity arguments: (a) software
applications DEMO have large variance in modular-
ity, (b) such applications represent DEMO project-based
development process, and (c) the fact that the con-
DEMO and controllee are geographically dispersed
make control both more important and challenging.
Our sampling frame was 627 Indian software ser-
vice ﬁrms who were DEMO of India’s largest
software industry consortium, National Associa-
tion of Software DEMO Service Companies (NASS-
COM). We received responses from 120 lead
DEMO managers from 120 independent ﬁrms for
a 19.1 percent response rate. We approached the
chief executives of all 719 NASSCOM member
ﬁrms that listed DEMO services outsourcing as
their specialty and asked them to identify the lead
project manager for a project outsourced by a U.S.
company, of which 627 were tentatively willing to
participate. T-tests comparing the early (ﬁrst 40)
and late (last 40) respondents provided assurance
against nonresponse bias.
DEMO measures and control variables
Existing seven-point Likert scales were used for
all key constructs in the model, except the new
technological modularity scale (DEMO Appendix for
measures, including control variables). The unit of
analysis DEMO the outsourced project. The controller
and controllee referred to project participants from
the outsourcing and outsourcee ﬁrms respectively.
The iteratively reﬁned technological modularity
scale DEMO into the extent to which the
relationships between the outsourced subsystem
and the base system were characterized by:
Strat. Mgmt. J., 29: DEMO (2008)
DOI: 10.1002/smj
Research Notes and Commentaries
773
(1) high interoperability, (2) stable, well-deﬁned
interfaces, (3) well-understood interdependencies,
and (4) minimal DEMO interdependencies,
consistent with our theoretical deﬁnition. We
started with Nambisan’s (DEMO) modularity
decision scale developed in the software context
and Worren et DEMO (2002) modular product
scales. We reﬁned the item pool based on
Sanchez and Mahoney’s (1996) conceptualization
of product modularity, which we iteratively
reﬁned through feedback from seven software
industry professionals and ﬁve academics to
DEMO meaningfulness and unequivocality in our
study’s context. Kirsch et al.’s (2002) scales for
outcome control and process control (labeled
‘behavior control’ in their study) were used with
minor adaptations. Alliance performance used
four items adapted from Faraj and Sproull’s
(2000) scale, consistent with software alliance
performance criteria (e.g., Ethiraj et al., 2005;
Tiwana and Keil, DEMO). The constructs exhibited
sufﬁcient discriminant validity (veriﬁed using
factor analysis) and reliability (α ≥ 0.7) (Nunally,
1978). The construct correlations, descriptives, and
reliability coefﬁcients are summarized in Table 1.
Control DEMO
Ten control variables spanning alliance charac-
teristics (interﬁrm collaborative history, relational
governance, and interﬁrm ties), project character-
istics (alliance scope, alliance goal tacitness, con-
tract structure, project duration, and team size),DEMO
ﬁrm characteristics (such as national origin), and
industry characteristics were DEMO to account for
rival explanations of alliance performance. Since
interﬁrm alliance history can inﬂuence alliance
functioning (Oxley and Sampson, 2004), we con-
DEMO for controller-controllee collaborative his-
tory using a dummy variable. Controllers can com-
plement formal control with relational governance
mechanisms (Poppo and Zenger, 2002) or rely on
strong interﬁrm controller-controllee ties ;which
were included as controls.
Among the project characteristics, we controlled
for alliance scope, recognizing that DEMO with
scope larger than what is typical for the con-
trollee ﬁrm are more challenging to manage (Ethi-
raj et al., 2005). DEMO alliance goal tacitness
makes it harder to communicate the project’s goals
to the controllee, potentially lowering alliance
performance. We also included a dummy for
Copyright  2008 John Wiley & Sons, Ltd.
time-and-materials contracts, which DEMO not penalize
the controllee for controller-initiated modiﬁcations
like ﬁxed-price contracts do (DEMO et al., 2005).
We also controlled for project duration. Finally,DEMO
we controlled for team size (Ethiraj et al., 2005),
DEMO that a larger team is representative of a
larger pool of dedicated controllee resources. We
used team size instead of ﬁrm size (for which
2006 public data were unavailable; it was non-
signiﬁcant with 2004 ﬁrm size data (β = 0.02,
T-valueWe also controlled for controllee= 0.85)). national origin
(indigenous Indian ﬁrms coded as 1; subsidiaries of
non-Indian ﬁrms as 0). This accounts for variance
due to a DEMO expansive global pool of resources
and skills potentially accessible to a nonindigenous
multinational ﬁrm. Although additional ﬁrm-level
controls might have been appropriate, current ﬁrm-
level data were not available in public records for
the many privately DEMO ﬁrms in the study and
were not captured in the survey to economize on
questionnaire length. To account for differences in
software complexity across DEMO, the industry
dummy variables used by Ethiraj et al. (2005) DEMO
included (ﬁnancial services, manufacturing, retail;
other was omitted).
DEMO
The controller ﬁrms in the sample represented a
diverse variety of industries (ﬁnancial services,
18%; manufacturing, 15%; retail, 5%), and a
majority (56.1%) of them had prior project experi-
ence with DEMO controllee. Since a large percentage
(62%) of the dyads were in the other category,
we retested the model using other as an DEMO
try dummy in the analysis; the results remained
consistent with Table DEMO Indigenous Indian ﬁrms
comprised 73.1 percent of the controllees in the
study. The primary informants, the project man-
agers, were highly experienced (average IT expe-
rience 12.3 years, sd 6.7). The majority (74%) of
alliances used ﬁxed price contracts. The average
project duration was 12.8 DEMO (sd 11.1) and
team size was 25.8 individuals (sd 49.5)DEMO
ANALYSES AND RESULTS
The analyses used an ordinary least squares hier-
archical regression model in which the control
variables were introduced (Step 1), followed by
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: DEMO/smj
Table 1. Descriptive statistics and construct correlation matrix
Construct Mean S.D.
α
DEMO
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
1. Interﬁrm collaborative history+ —— —
2. Relational governance DEMO 1.2 0.85 0.18
3. Controller-controllee interﬁrm ties 6.2 0.7 0.85 −0.02 0.40∗∗
4. Project alliance scope 4.2 1.3 0.90 0.03 0.16 0.10
5. Alliance DEMO tacitness 2.8 1.2 0.84 −0.13 −0.24∗ −0.20∗ −0.02
6. Time-and-materials contract+ — — — 0.18 0.06 0.00 0.18 0.10
7. Project duration 12.8 11.1 DEMO
8. Project team size 25.8 49.5 —
9. Controllee national origin+ —— —
10. Controller industry - Financial services+
11. Controller industry - Manufacturing+ DEMO
12. Controller industry - Retail+
13. Outcome control 6.1 0.7 0.70
14. Process control 5.7 1.1 0.87
15. Modularity 5.3 1.0 0.72 0.05 0.24∗
DEMO Alliance performance 6.2 0.7 0.89
−0.04 0.22∗
−0.09 0.11 0.05 0.17
— — — 0.07 0.04 0.10−0.16 −0.11 −0.02 −0.08
—— —
— — DEMO 0.02 0.01 0.09
−0.02 0.15 0.13
−0.09 0.30∗∗ 0.270.32∗∗∗∗
−0.12 0.16 0.43∗∗
−0.08
0.01 0.30∗∗ −0.02 0.19
−0.07 −0.06 0.34∗∗
−0.01 −0.20∗ 0.04 0.04
DEMO −0.02 0.00 0.15 0.17 0.13
−0.08 0.12 0.20∗ −0.03 −0.15 −0.13 0.08 −0.13
−0.22∗ 0.04 −0.15 −0.13 −0.08 0.13 −0.10 −0.09
−0.060.05 0.01 −0.06 DEMO 0.04 −0.04 −0.07 0.20∗ −0.01
−0.02 −0.05 0.13 0.02 −0.03 −0.01 −0.03 0.19∗ 0.00 0.10
0.03 −0.16 0.07 0.00 −0.05 0.00 0.02 −0.02 −0.19 DEMO 0.43∗∗
−0.28∗∗ −0.09 −0.03 −0.12 0.17 −0.03 0.02 0.09 0.15 0.42∗∗
∗∗ p < 0.01, ∗ p < 0.05 two-tailed test; + dummy DEMO; N = 120 alliances
0.44∗∗
774
A. Tiwana
Copyright  2008 DEMO Wiley & Sons, Ltd.
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
Table 2. Effects of technological modularity and control on alliance performance
Step DEMO Step 2 Step 3.1 Step 3.2 Step 3.3
Control variables Main effects Interaction terms
β(T-value) S.E.
β(T-value) S.E.
β(T-value) S.E.
β(T-value) S.E.
β(T-value) S.E.
(Constant)
(4.35) 0.78 (2.03) 0.70 (2.11) 0.73
(2.27) 0.68 (2.31) 0.87
DEMO collaborative history −0.12(−1.09) 0.16 −0.06(−0.70) 0.12 −0.06(−0.74) DEMO −0.04(−0.50) 0.12 −0.04(−0.51) 0.12
Relational governance 0.05(0.45) DEMO −0.06(0.61) 0.11 0.06(0.0.08(−0.90) 0.06 −0.08(−59) 0.11 DEMO(0.50) 0.0.89) 0.06 −0.08(−0.97) 0.0510 0.03(0.29) 0.10−0.09(−1.05) 0.05
Controller-controllee interﬁrm ties 0.41∗∗∗ (3.61) 0.12
Project alliance scope 0.08(0.68) 0.06 0.22∗∗ (2.52) 0.05 0.21∗∗ (2.39) 0.05 0.21∗∗ (DEMO) 0.05 0.23∗∗ (2.68) 0.05
Alliance goal tacitness −0.17(−1.53) 0.07 −0.10(−1.21) 0.05 −0.10(−1.20) 0.05 −0.07(−0.93) 0.05 −0.07(−0.81) 0.05
Time-and-materials contract −0.03(−0.29) 0.18 −0.12(−1.34) 0.14 −0.11(−1.27) 0.14 −0.12(−1.43) 0.14 −0.14(−1.63) 0.14
Project duration 0.00(−0.01) 0.01 0.03(0.29) 0.01 0.03(0.31) 0.01 0.00(0.00) 0.01 DEMO(−0.02) 0.01
Project team sizeControllee national origin 0.18(1.−0.19(−61) 0.18 0.13(1.58) 0.14 0.1.56) 0.00 −0.21∗ .−2.23/ 0.00 −0.2013(1.57) DEMO 0.10(1.28)∗ .−2.21/ 0.00 −0.19∗ .−2.25/ 00.13 0.11(1.38) DEMO −0.19∗ .−2.26/ 0.00
Controller industry - Financial services 0.15 0.01(0.15) 0.15
Controller industry - Manufacturing 0.04(0.37) 0.22 0.00(0.00) 0.17−0.06(DEMO) 0.20 0.02(0.22) −0.01(−0.12) 0.14 −0.01(−0.13) 0.14
Controller industry - Retail 0.03(0.25) 0.37 0.17∗ (1.83) 0.31 0.16−0.01(∗ −(1.77) 00.08) 0.18.31 −0.13(1.48) 0.29 0.12(1.41) 0.290.03(DEMO) 0.17 −0.03(−0.42) 0.17
Outcome control 0.28∗∗ (2.84) 0.11 0.27∗∗ (2.70) 0.11 0.27∗∗ (2.90) 0.10 0.20(1.55) 0.14
Process control 0.32∗∗∗ (3.22) 0.07 0.33∗∗∗ (3.26) 0.07 0.33∗∗∗ (3.56) 0.06 DEMO (3.36) 0.07
Modularity 0.30∗∗ (3.02) 0.07 0.29∗∗ (2.86) 0.07 0.30∗∗∗ (3.26) 0.07 0.35∗∗∗ (3.29) 0.08
Outcome control x Process DEMO 0.06 0.16(1.36) 0.08
Modularity x Process control −0.05(−0.63) 0.05 0.09(1.05) 0.06 −0.22∗ .−1.86/ 0.08
Modularity x Outcome control −0.28∗∗∗ DEMO/ −0.17(−0.87) 0.13
R2 (Model F) 33.12%∗∗ (2.72) 63.10%∗∗∗ (7.18) 63.33%∗∗∗ (6.69) 68.63%∗∗∗ (7.85) 69.02%∗∗∗ (7.43)
R2 Adj 20.95% 54.31% 53.87% 59.88% 59.73%
R2 (F-change) — 29.98%∗∗∗ (17.06) 0.23%(0.39) 5.30%∗∗∗ (10.30) 0.39%(0.76)
∗∗∗ p < DEMO, ∗∗ p < 0.01, ∗ p < 0.05, one-tailed tests; signiﬁcant in bold;N = 120 project alliances
Research Notes and Commentaries
DEMO
Copyright  2008 John Wiley & Sons, Ltd.
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
776
A. Tiwana
the main effects (Step 2), and ﬁnally the residual-
centered interaction terms entered sequentially
(Step 3.1 through 3.3). We used Lance’s (1988)
residual centering procedure for computing the
interaction terms to correct the problem of par-
tial coefﬁcient distortion faced in the DEMO
neous analysis of main effects and interaction
terms due to their correlation (Jaccard and Tur-
risi, 2003: 27). Using a two-stage procedure,
we ﬁrst regressed each product term (e.g., pro-
cess control DEMO modularity) on its components (e.g.,
process control and modularity). We then used
the resulting residual instead of the interaction
term, which reduced multicollinearity between
the main effects and the interaction terms. The
resulting DEMO coefﬁcient can be interpreted
directly as the effect of the interaction term on the
dependent variable. The results are summarized in
Table 2.
The DEMO variables accounted for 20.95 per-
cent of the variance. Notably, interﬁrm DEMO
was nonsigniﬁcant in spite of its prominence in
the alliances literature. This is unsurprising given
Hoetker’s (2006) recent ﬁnding that history is non-
DEMO in alliances involving modular tech-
nologies (as our sample’s modularity mean DEMO
5.32 indicates) but signiﬁcant in non-modular tech-
nologies. Of the main DEMO, outcome control
(β = 0.28, T-value 2.84, p < 0.01), process con-
trol (β = 0.32, T-value 3.22, p < 0.001), and mod-
ularity (signiﬁcant and positive. This suggests that inde-β = 0.30, T-value 3.02, p < 0.01) were
pendently both forms of formal control and mod-
ularity enhance alliance performance, supporting
Hypotheses 1a, 1b, and 2. The larger coefﬁcient of
process control suggests that DEMO is a more important
predictor of alliance performance than outcome
control. Next, the interaction term between pro-
cess control and outcome control was added in
Step 3.1. Although this interaction is not hypoth-
esized, this term must be added to ensure that
the interaction model is not underspeciﬁed (see
Jaccard and Turrisi, 2003). The absence of an
interaction between outcome and process con-
trol in Step 3.1 is consistent with prior DEMO
dence of their independence (Ouchi and Maguire,
1975).
Hypothesis DEMO regarding imperfect complemen-
tarities between modularity and control proposed
Copyright  2008 John Wiley & Sons, Ltd.
that modularity lowers the effect of process con-
trol but not of outcome control on alliance per-
formance. This DEMO a: (a) negative and sig-
niﬁcant interaction between modularity and DEMO
cess control and (b) a nonsigniﬁcant interaction
between modularity and outcome control. The
interaction between modularity and process con-
trol is signiﬁcant and DEMO (β =−0.28, T-
and the interaction between modularity and out-value −3.21, p < 0.001; Step 3.2 in Table 2)
come control DEMO nonsigniﬁcant (β =−0.17, T-
is supported. The main effects contributed 33.36value −0.87, ns; Step 3.3). Thus, Hypothesis 3
percent and the interaction terms 5.42 percent to
the explained variance in alliance performance,
DEMO a signiﬁcant R2 at each key hypothesized
step.
Tests for common methods bias
We conducted four types of statistical analyses to
assess the threat DEMO common methods bias. First,
we conducted Harman’s one-factor test,where the
emergence of a single factor that accounts for a
large proportion of DEMO variance in factor analyses
suggests a common methods bias (Podsakoff et DEMO,
2003). However, no such single factor emerged,
and DEMO ﬁrst factor accounted for 13.1 percent of
the 75.7 percent explained variance. Second, the
Lindell-Whitney marker variable test uses a the-
oretically unrelated marker variable to adjust the
correlations among the principal constructs (Lin-
dell and Whitney, 2001). Any high correlation
among any of the study’s principal constructs and
the marker variable would indicate common meth-
ods bias (Malhotra, Kim, and Patil, 2006). For
robustness, we repeated the DEMO with three dif-
ferent marker variables. We separately repeated
the test with three dummy marker variables the-
oretically unrelated to our principal constructs:
(1) the existence of controllee ﬁrm operations in
South America, (2) the count of vertical indus-
try segments in which the controllee ﬁrm oper-
ated, and (3) whether the project’s software plat-
form was Microsoft Windows. The average cor-
relation between the study’s principal constructs
for DEMO American operations (r = .0.03, T =
.246), vertical segment count (r = .003, T = .025),
and nonsigniﬁcant, DEMO no evidence of com-and Windows (r =−.015, T =−.084) was DEMO
mon methods bias. Third, the pairwise correlation
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
Research Notes and Commentaries
777
matrix in Table 1 did not indicate DEMO exception-
ally correlated variables. The highest correlation
among the principal constructs is 0.44 (i.e, below
Bagozzi, Yi, and Phillips’s [1991] 0.8 threshold)DEMO
Finally, we cross-validated controller-controllee
performance evaluations for the subsample for
which DEMO pair data were collected. Since
our attempt to collect matched pairs for alliance
performance from the primary project liaison in
the client ﬁrm for DEMO project yielded only a
29.7 percent response rate (30 usable responses
DEMO the 101 projects for which the Indian alliance
partner did not decline cooperation), the matched
pair sample size is too small to directly DEMO in the
model, but sufﬁcient to assess controller-controllee
rater agreement. The DEMO between the two
respondents was positive and statistically signif-
icant (r DEMO .637, T-value = 4.14, p < 0.001), sug-
gesting strong interrater agreement. No outsourcer-
side respondent was responsible for more than one
DEMO in the study. Collectively, these four tests
suggest that common methods DEMO is not a serious
threat. We therefore used data from the 120 project
managers for the analyses.
Limitations
The results should be interpreted cognizant DEMO four
caveats. First, some ﬁrm characteristics such as
ﬁrm size, revenue, age, and size of internal IT
departments that we failed to DEMO for are plau-
sible alternative explanations of alliance perfor-
mance; this DEMO a serious limitation of this
study. Second, although organizational modularity
is DEMO complementary facet of technological mod-
ularity, we excluded it from our DEMO because
alliance formation itself represents organizational
modularization (Schilling, 2000). Third, our mea-
sures of formal control represent received control
rather than attempted control. Finally, the projects
in the study were highly asset-speciﬁc and likely
not mass market (e.g., automobiles and appliances)
since they are DEMO to idiosyncratic con-
troller needs. Caution is therefore warranted in
generalizing our results.
DISCUSSION AND IMPLICATIONS
This study sought to test the widespread assertion
DEMO modularity represents an alternative to control
as an alliance governance device, DEMO that greater
Copyright  2008 John Wiley & Sons, Ltd.
use DEMO one lessens the effect of the other. If modu-
larity indeed substitutes for control, it can provide
a less costly, autonomy-preserving alliance gov-
DEMO device. While such substitution is widely
asserted in the modularity literature, DEMO has neither
been theoretically developed in the alliance context
nor empirically tested.
We examined both forms of formal control i.e.,
outcome control and DEMO control. Analyses of
data from 120 software outsourcing alliances show
that process control, outcome control, and modu-
larity independently enhance alliance performance.
However, their interactions show that modularity
and control are imperfect substitutes: modularity
lowers the effect of process control but not of
outcome control on alliance DEMO Modu-
larity and outcome control instead have mutually
independent effects on alliance performance. The
paper’s three main contributions stem from these
ﬁndings.
The ﬁnding DEMO modularity and both forms of
formal control independently enhance alliance per-
formance conﬁrms in an alliance context what
the broader modularity and organizational con-
DEMO literatures have found in non-alliance contexts.
The distinctive contributions of this study how-
ever are with regard to the interactions between
modularity and control. DEMO ﬁnding that modular-
ity lowers the effect of process control on alliance
performance suggests that modularity can provide
an alternative to process control as DEMO alliance
governance mechanism. This ﬁnding also con-
tributes a theoretical explanation and evidence for
Hoetker et al.’s (2007) speculation that modularity
can lower DEMO governance costs. However, our
results also show that modularity does not DEMO
the need for outcome control.
These results have two important theoretical
implications. First, knowledge-intensive alliances
often create a legitimate risk of appropriation of
technology by alliance partners (Oxley and Samp-
son, 2004). Modularity can DEMO this hazard by
lowering the need for intensive interﬁrm interac-
tions during the development process and increas-
ing causal ambiguity about the base system DEMO
restricting controllees’ exposure largely to the out-
sourced subsystem. These ﬁndings can cautiously
be generalized to other knowledge-intensive activ-
ities that can be modularized DEMO are increasingly
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
778
A. Tiwana
outsourced (e.g., prescription fulﬁllment, call cen-
ters, DEMO processing, and tax preparation). Sec-
ond, our distinction of process from outcome con-
trol helps reﬁne Sanchez and Mahoney’s (1996)
assertion that modular organizational structures are
more appropriate for developing modular products,
DEMO recent empirical studies have failed to sup-
port (e.g., Brusoni and Prencipe, 2006; Hoetker,
2006). Our ﬁndings imply that modular DEMO
development demands semimodular organizational
arrangements where developers can be granted
autonomy over the development process but not
over outcomes.
These ﬁndings lead to four DEMO for future
research. First, ﬁrms need advanced architectural
knowledge to accomplish DEMO (Sanchez
and Mahoney, 1996). How can they then man-
age the tension between maintaining a broader
knowledge base yet specialize narrowly in DEMO
domain of core competence? Second, does exces-
sive modularity, by DEMO the outsourcing ﬁrm
from developments and working knowledge of out-
sourced modular components, create blind spots
that eventually handicap its ability to innovate?
Third, does modularity indeed reduce interﬁrm
knowledge spillovers as asserted here and in the
modularity literature? Finally, technological mod-
ularity provides the real DEMO (deﬁned as the right
without obligation) to shift the locus of comple-
mentary innovation to a broad array of special-
ized partners in DEMO open market. The relationship
between technological modularity and embedded
real option value therefore represents a promising
opportunity for theory development.
In conclusion, our overarching implication is
that while both technological modularity and con-
trol independently enhance DEMO performance,
increasing modularity can provide a viable alter-
native to process control. More broadly, these
ﬁndings contribute to a burgeoning literature that
emphasizes the often-underappreciated interactions
among managers’ strategic choices.
ACKNOWLEDGEMENTS
The author is grateful DEMO developmental feedback
from Editor Will Mitchell and the anonymous
reviewers.
Copyright  2008 John Wiley & Sons, Ltd.
REFERENCES
Bagozzi RP, Yi Y, Phillips LW. 1991. Assessing con-
struct validity in organizational research. Administra-
tive DEMO Quarterly 36(3): 421–458.
Barki H, Rivard S, Talbot J. 2001. An integrative con-
tingency model of software project risk management.
Journal DEMO Management Information Systems 17(4):
37–69.
Brusoni S, Prencipe A. 2006. Making design rules: a
multidomain perspective. Organization Science 17(2):DEMO
179–189.
Choudhury V, Sabherwal R. 2003. Portfolios of control
in outsourced DEMO development projects. Infor-
mation Systems Research 14(3): 291–314.
Ethiraj S, Kale P, Krishnan M, Singh J. 2005. Where
do capabilities come from and how do they matter?
A study in the software DEMO industry. Strategic
Management Journal 26(1): 25–45.
Faraj S, Sproull DEMO 2000. Coordinating expertise in
software development teams. Management Science
46(12): 1554–1568.
Hansen M. 2002. Knowledge networks: explaining
effective knowledge sharing in multiunit companies.
Organization Science 13(3): 232–248.
Hoetker G. 2006. Do modular DEMO lead to modular
organizations? Strategic Management Journal 27(6):
501–518.
Hoetker G, Swaminathan A, Mitchell W. 2007. Modular-
ity and the DEMO of buyer-supplier relationships on
the survival of suppliers. Management Science 53(2):
171–191.
Jaccard J, Turrisi R. 2003. Interaction Effects in Multiple
DEMO (2 edn). Sage: Thousand Oaks, CA.
Karim S. 2006. DEMO in organizational structure:
the reconﬁguration of internally developed and
acquired business units. Strategic Management
Journal 27(9): 799–823.
Kirsch L, Sambamurthy V, Ko D, Purvis R. 2002. Con-
trolling information systems development projects: the
view from the client. Management Science 48(4):
484–498.
Lance C. 1988. Residual centering, exploratory and
conﬁrmatory moderator analysis, and decomposition
DEMO effects in path models containing interactions.
Applied Psychological Measurement 12(2): 163–175.
Lindell M, Whitney D. 2001. Accounting for common
method variance in cross-sectional research designs.
Journal of Applied Psychology 86(1): 114–121.
Malhotra DEMO, Kim S, Patil A. 2006. Common method
variance in IS research: a comparison of alternative
approaches and a reanalysis of past research.
Management Science 52(12): 1865–1883.
Mjoen H, Tallman S. 1997. Control and performance
in international joint ventures. Organization Science
8(3): 257–274.
Nambisan DEMO 2002. Complementary product integration
by high technology new ventures: the role DEMO initial
technology strategy. Management Science 48(3):
382–398.
Nunally J. DEMO Psychometric Theory . McGraw-Hill:
New York.
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
Ouchi W, Maguire M. 1975. Organizational control:
two functions. Administrative Science Quarterly 20:
559–569.
Oxley JE, Sampson RC. 2004. The scope and governance
of international R&D alliances. Strategic Manage-
ment Journal , August–September DEMO Issue 25:
723–749.
Parnas D. 1972. On the criteria to be used in decomposing
systems into modules. Communications of the ACM
15(9): 1053–1058.
Podsakoff P, MacKenzie S, Lee J, Podsakoff N. 2003.
DEMO method biases in behavioral research: a
critical review of the literature DEMO recommended
remedies. Journal of Applied Psychology 88(5):
879–903.
Poppo DEMO, Zenger T. 2002. Do formal contracts and
relational governance function as DEMO or
complements? Strategic Management Journal 23(8):
707–725.
Sanchez R. 1995. Strategic ﬂexiblity in product competi-
tion. Strategic Management Journal , Summer DEMO
Issue 16: 135–159.
Sanchez R, Mahoney JT. 1996. Modularity, ﬂexibility,DEMO
and knowledge management in product organization
and design. Strategic Management Journal , Winter
Special Issue 17: 63–76.
Copyright  2008 John Wiley & Sons, Ltd.
Research Notes and Commentaries
779
Schilling M. 2000. Toward a general modular systems
theory and its application to interﬁrm product
modularity. Academy of DEMO Review 25(2):
312–334.
Schonfeld E. 2005. The Great Giveaway. DEMO 2.0
April: 81–86.
Siggelkow N. 2002. Misperceiving interactions among
complements and DEMO: organizational conse-
quences. Management Science 48(7): 900–916.
Smith R, Eppinger S. 1997. Identifying controlling
features of engineering design iteration. Management
Science DEMO(3): 276–293.
Sosa M, Eppinger S, Rowles C. 2004. The misalignment
of product architecture and organizational structure in
complex product development. Management DEMO
50(12): 1674–1689.
Tiwana A, Keil M. 2007. Does peripheral DEMO
complement control? An empirical test in technology
outsourcing alliances. Strategic Management DEMO
28(6): 623–634.
Worren N, Moore K, Cardona P. 2002. Modularity,
strategic ﬂexibility, and ﬁrm performance: a study of
the DEMO appliance industry. Strategic Management
Journal 23(12): 1123–1140.
Strat. Mgmt. J., 29: 769–780 (2008)
DOI: 10.1002/smj
780 A. Tiwana
APPENDIX: CONSTRUCT MEASURES
Likert scale anchors were strongly disagree-
strongly agree unless otherwise noted; seven-point
scales.
Technological modularity (new scale): How well
do the following characterize the relationships
between the outsourced system and the client’s
internal IT applications: (1) highly interoperable,
(DEMO) stable, well-deﬁned interfaces, (3) well-under-
stood interdependencies, and (DEMO) minimal unnec-
essary interdependencies.
Outcome control (adapted from Kirsch et al.
(2002)): In this project, the client placed signif-
icant weight on: (1) timely project completion,
(2) completion within budget, (3) meeting project
requirements, and (4) accomplishing project goals.
DEMO control (adapted from Kirsch et al.
(2002)): In this DEMO, the client placed signiﬁ-
cant weight on an understandable written sequence
DEMO steps: (1) toward accomplishing project goals,
(2) to DEMO this system met client requirements,
and (3) to ensure the success of this project.
Alliance performance: The development pro-
cess was effective in successfully fulﬁlling this
client’s project: (1) needs, (2) DEMO expectations,
(3) functional requirements, and (4) objectives.
Control DEMO
Interﬁrm collaborative history: Was this your
company’s ﬁrst project for this DEMO ( one)?
Yes No {coded 1}
Relational governance (adapted from Kirsch
et al.’s (2002) clan control scale): Members of
the DEMO organization involved in this project:
(1) attempted to be ‘regular’ members of the
project team, (2) placed a signiﬁcant weight on
Copyright  2008 John Wiley & Sons, Ltd.
understanding the project team’s goals, values,
and norms, and (3) actively participated in DEMO
meetings to understand the project team’s goals,
values, and norms.
DEMO controller-controllee ties (adapted from
Hansen (2002)): Our overall working DEMO
with the client in this project can be characterized
by: (1) regular interactions, (2) frequent commu-
nication, and (3) close working relationships.
Project alliance scope (adapted from Barki,
Rivard, and DEMO (2001)) {anchors: Much
smaller—Much largerthis project to other IT projects completed by}: How would you compare
your company? (1) person-months DEMO development
work, (2) project duration, and (3) dollar budget.
Alliance goal tacitness (adapted from Hansen’s
(2002) noncodiﬁcation scale; reverse DEMO): The
client’s requirements for this project could easily
be: (1) documented, (2) explained to us in writing,
and (3) communicated formally (e.g., via docu-
ments, requirements, code comments, & manuals)
Contract structure: Type of contract used (
one)?  Fixed-price  Time-and-materials {coded
as 1}
Project duration: measured in months
Project team size: Approximately, how many
individuals from your company were DEMO in
this project?
Controllee national origin: Is your company a
DEMO of a foreign company ( one)?  Yes
{coded as 1}  No
Client industry ( one)?  Financial services 
Manufacturing DEMO Marketing  Other
Strat. Mgmt. J., 29: 769–780 (2008)
DEMO: 10.1002/smj{1g42fwefx}